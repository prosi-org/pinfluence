exit
where("(begin_at.year <= '#{opts[:year]}' AND end_at >= '#{opts[:year]}-12-31 23:59:59')").countexit
where("(begin_at.year <= '#{opts[:year]}' AND end_at >= '#{opts[:year]}-12-31 23:59:59')").count
where("(begin_at.year <= '#{opts[:year]}' AND end_at >= '#{opts[:year]}-12-31 23:59:59')")
where("(begin_at.year <= '#{opts[:year]}' AND end_at >= '#{opts[:year]}-12-31 23:59:59')").count
where("(DATE(begin_at) <= '#{opts[:year]}' AND end_at >= '#{opts[:year]}-12-31 23:59:59')").count
where("(DATE(begin_at) <= '#{opts[:year]}' AND end_at >= '#{opts[:year]}-12-31 23:59:59')")
where("(YEAR(begin_at) <= '#{opts[:year]}' AND end_at >= '#{opts[:year]}-12-31 23:59:59')").count
where("(YEAR(begin_at) <= '#{opts[:year]}' AND end_at >= '#{opts[:year]}-12-31 23:59:59')")
InfluencerRepository.new.all
InfluencerRepository.all
all
count
all
where("(begin_at <= '#{opts[:year]}-01-01 00:00:00' AND end_at >= '#{opts[:year]}-12-31 23:59:59')")
where("(begin_at <= '#{opts[:year]}-01-01 00:00:00' AND end_at >= '#{opts[:year]}-12-31 23:59:59')").count
exit
where("begin_at >= '01-01-#{opts[:year]}' AND end_at <= '01-01-#{opts[:year]}'")
where("begin_at >= '01-01-#{opts[:year]}' AND end_at <= '01-01-#{opts[:year]}'").count
i
exit
continue
(influencer.begin_at.year..influencer.end_at.year).to_a
exit
[1, 3, 2, 1].uniq.sort
[1, 3, 2, 1].uniq
[1, 2,3, 1].uniq
[1, 2,3, 1].uniq.sort
[1, 1].uniq.sort
[1, 1].uniq
[1, 1].flatten
(influencer.begin_at.year..influencer.end_at.year)
(influencer.begin_at.year..influencer.end_at.year).to_a
(influencer.begin_at.year..influencer.end_at.year+1).to_a
(influencer.begin_at.year...influencer.end_at.year+1).to_a
influencer.end_at.year
influencer.begin_at.year
(influencer.begin_at.year-1...influencer.end_at.year).to_a
(influencer.begin_at.year...influencer.end_at.year).to_a
(influencer.begin_at.year.to_i..influencer.end_at.year.to_i)
(influencer.begin_at.year...influencer.end_at.year)
(influencer.begin_at.year..influencer.end_at.year)
influencer.end_at.year
influencer.begin_at.year
continue
lng.gsub(/\W/,"")
[lat.gsub(/\W/,"").to_f, lng.gsub(/\W/,"").to_f]
value
lng
lat
continue
exit
value.gsub(/\W/,"")
value.split(",")[0].to_f
value.split(",")[0]
value.split(",")
value
continue
repository.all.each { |i| puts i.name }
repository.all.each { |i| i.name }
repository.all
@influencers
Json.dumps influencers.first
JSON.dumps influencers.first
require 'json'
JSON.dumps influencers.first
influencers.first
influencers.first.to_json
influencers.first
influencers
exit
influencer.update(params[:influencer])
params
influencer.update(params)
incluencer.update(params)
influencer.methods
incluencer.methods
influencer
continue
InfluencerRepository.new.all
InfluencerRepository.all
InfluencerRepository.new.all
n_at.year.to_i..influencer.end_at.year.to_i)
(influencer.begin_at.year...influencer.end_at.year)
(influencer.begin_at.year..influencer.end_at.year)
influencer.end_at.year
influencer.begin_at.year
continue
lng.gsub(/\W/,"")
[lat.gsub(/\W/,"").to_f, lng.gsub(/\W/,"").to_f]
value
lng
lat
continue
exit
value.gsub(/\W/,"")
value.split(",")[0].to_f
value.split(",")[0]
value.split(",")
value
continue
repository.all.each { |i| puts i.name }
repository.all.each { |i| i.name }
repository.all
@influencers
Json.dumps influencers.first
JSON.dumps influencers.first
require 'json'
JSON.dumps influencers.first
influencers.first
influencers.first.to_json
influencers.first
influencers
exit
influencer.update(params[:influencer])
params
influencer.update(params)
incluencer.update(params)
influencer.methods
incluencer.methods
influencer
continue
InfluencerRepository.new.all
InfluencerRepository.all
InfluencerRepository.new.all
